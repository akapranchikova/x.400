name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    name: Setup toolchains
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - uses: dtolnay/rust-toolchain@stable
      - name: Detect pnpm store
        id: pnpm-cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  install:
    name: Install dependencies
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - uses: dtolnay/rust-toolchain@stable
      - name: Restore pnpm store
        id: pnpm-cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('packages/core-service/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Upload pnpm lockfile
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-lock
          path: pnpm-lock.yaml

  build:
    name: Build packages
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - uses: dtolnay/rust-toolchain@stable
      - name: Restore pnpm store
        id: pnpm-cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: pnpm install
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Upload UI dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-client-dist
          path: apps/ui-client/dist
          if-no-files-found: ignore
      - name: Upload Rust target
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-service-target
          path: packages/core-service/target
          if-no-files-found: ignore

  test:
    name: Run tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - uses: dtolnay/rust-toolchain@stable
      - name: Restore pnpm store
        id: pnpm-cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.path }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: pnpm install
        run: pnpm install --frozen-lockfile
      - name: Run vitest
        run: pnpm test
      - name: Run cargo tests
        run: pnpm --filter @x400/core-service exec cargo test --workspace --all-features

  docs:
    name: Build documentation
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - name: Install mkdocs-material
        run: pip install mkdocs-material
      - name: pnpm install
        run: pnpm install --frozen-lockfile
      - name: Build docs
        run: pnpm --filter @x400/docs run docs:build
      - name: Upload docs site
        uses: actions/upload-artifact@v4
        with:
          name: docs-site
          path: packages/docs/site
          if-no-files-found: error
